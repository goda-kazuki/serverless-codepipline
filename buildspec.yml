# https://dev.classmethod.jp/articles/assumerole-in-codebuild/

version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      # - aws --version
      
      # - echo "[profile deployAccount]" > .awscli-config
      # # - echo "role_arn = arn:aws:iam::055505553584:role/iam-role-codebuild" >> .awscli-config
      # - echo "role_arn = arn:aws:iam::794742412879:role/SWX-Goda" >> .awscli-config


      # - echo "credential_source = EcsContainer" >> .awscli-config
      # - export AWS_CONFIG_FILE=${CODEBUILD_SRC_DIR}/.awscli-config

      # - echo "[deployAccount]" > .awscli-credentials
      # - echo "role_arn = ${DeployRoleArn}" >> .awscli-credentials
      # - echo "credential_source = EcsContainer" >> .awscli-credentials
      # - export AWS_SHARED_CREDENTIALS_FILE=${CODEBUILD_SRC_DIR}/.awscli-credentials


      - npm install

  # # デバッグする
  # pre_build:
  #   commands:
  #     - echo Entered the pre_build phase...
  #     - echo "Hello World" > /tmp/hello-world
  #     - codebuild-breakpoint
  build:
    commands:
      # - cat .awscli-config
      # - cat ${CODEBUILD_SRC_DIR}/.awscli-config

      # - cat .awscli-credentials
      # - cat ${CODEBUILD_SRC_DIR}/.awscli-credentials

      - credentials=$(aws sts assume-role --role-arn ${DeployRoleArn} --role-session-name "RoleSessionFromCodeBuild" | jq .Credentials)
      - export AWS_ACCESS_KEY_ID=$(echo ${credentials} | jq -r .AccessKeyId)
      - export AWS_SECRET_ACCESS_KEY=$(echo ${credentials} | jq -r .SecretAccessKey)
      - export AWS_SESSION_TOKEN=$(echo ${credentials} | jq -r .SessionToken)
      - aws sts get-caller-identity

      # - aws sts get-caller-identity
      # - aws sts get-caller-identity --profile deployAccount

      # - export AWS_SDK_LOAD_CONFIG=1

      - npx sls deploy



# test