service: serverless-codepipeline
frameworkVersion: '3'
useDotenv: true


provider:
  name: aws
  runtime: python3.9
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "ap-northeast-1"}
  environment:
    LOG_LEVEL: ${env:LOG_LEVEL}
  versionFunctions: false

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    layer: true

params:
  default:
    # resourceNamePrefix: ${self:service}-${self:provider.stage}-${aws:accountId}
    resourceNamePrefix: ${self:service}-${self:provider.stage}

package:
  patterns:
    - "!*/**"
    - "!*"
    - "app/**"


functions:
  HelloFunction:
    handler: app/functions/hello.handler
    name: ${param:resourceNamePrefix}-hello
    description: hello function
    memorySize: 512
    timeout: 3
    role: HelloFunctionRole
    # environment:
    events:
      - http:
          path: /hello
          method: get
    layers:
      - Ref: PythonRequirementsLambdaLayer

resources:
  Resources:
    HelloFunctionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - "sts:AssumeRole"
        ManagedPolicyArns:
          - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        RoleName: ${param:resourceNamePrefix}-hello-lambda-role 